import matplotlib.pyplot as plt
import numpy as np
import copy



y_half_bandwidth = [0, 0.031263, 0.010462, 0.009079, 0.022687, 0.022687, 0.039291, 0.039291, 0.039982, 0.069601, 0.07173, 0.07964, 0.07815, 0.073716, 0.073385]
x= [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70]
y_Delay = [ 0, 0.010828, 0.030917, 0.021942, 0.017166, 0.030599, 0.033593, 0.045212, 0.045212, 0.063112, 0.067473, 0.069337, 0.07079, 0.068478, 0.067049]
#y_Delay = [0, 0.031263, 0.010462, 0.009079, 0.022687, 0.022687, 0.039291, 0.039291, 0.039982, 0.069601, 0.07173, 0.07964, 0.07815, 0.073716, 0.073385]
y_Delay_LastFiveSec = [0, 0.010828, 0.031664, 0.026006, 0.01739, 0.046868, 0.074274, 0.101627, 0.101627, 0.127976, 0.10501, 0.099184, 0.053236, 0.034903, 0.053458]

y_half_bandwidth_lastFiveSec = [0, 0.031263, 0.006822, 0.006193, 0.029598, 0.029598, 0.093866, 0.093866, 0.068971, 0.114411, 0.070194, 0.061788, 0.069199, 0.069002, 0.071196]

y_MH05Alone = [ 0, 0.030628, 0.044028, 0.038216, 0.032995, 0.03817, 0.036356, 0.050252, 0.066366, 0.067436, 0.068029, 0.070985, 0.070123, 0.070003, 0.0703]
y_MH05Alone2 = [0,  0.009818, 0.014131, 0.015077, 0.011489, 0.023644, 0.024604, 0.038716, 0.037137, 0.043529, 0.037618, 0.042329, 0.043856, 0.043786, 0.043256]
y_MH05Alone3 = [0, 0.038201, 0.020037, 0.018997, 0.01856, 0.023189, 0.026183, 0.053142, 0.053574, 0.056236, 0.056459, 0.058909, 0.058416, 0.05788, 0.057704]
y_MH05Alone4 = [0, 0.014983, 0.010977, 0.010384, 0.015975, 0.032608, 0.032767, 0.043497, 0.043303, 0.047953, 0.049227, 0.049837, 0.04972, 0.049203, 0.049703]
y_MH05Alone5 = [0, 0.009862, 0.017997, 0.018886, 0.032132, 0.038738, 0.036301, 0.062393, 0.058086, 0.06937, 0.068282, 0.06708, 0.065027, 0.063609, 0.062158]
y_MH05Alone8 = [0, 0.009689, 0.018202, 0.017585, 0.016308, 0.031735, 0.031074, 0.041756, 0.041986, 0.057837, 0.053686, 0.057526, 0.056513, 0.056007, 0.055143]
y_MH05Alone9 = [0, 0.033397, 0.043876, 0.042879, 0.040061, 0.045011, 0.04307, 0.064157, 0.088669, 0.093483, 0.092594, 0.094445, 0.094915, 0.093703, 0.060336]



y_MH0405_MH05_0 = [0, 0.157601, 0.122251, 0.122644, 0.120887, 0.119711, 0.119075, 0.115146, 0.112301, 0.113624, 0.109841, 0.108242, 0.106089, 0.104869]#, 0.105065]
y_MH0405_MH05_2 = [0, 0.018469, 0.000136, 0.003966, 0.028646, 0.029497, 0.048589, 0.049952, 0.047087, 0.048342, 0.049145, 0.048778, 0.045053, 0.045332, 0.045622]
y_MH0405_MH05_3 = [0, 0.021533, 0.021932, 0.016637, 0.030786, 0.032289, 0.074046, 0.077632, 0.092402, 0.090173, 0.087841, 0.085751, 0.087626, 0.091864, 0.097768,]
y_MH0405_MH05_4 = [0, 0.013215, 0.016184, 0.01356, 0.016392, 0.073157, 0.092074, 0.084927, 0.088106, 0.090051, 0.115061, 0.155191, 0.207405, 0.201463, 0.199305]
y_MH0405_MH05_5 = [0, 0.027709, 0.003476, 0.004825, 0.033501, 0.032574, 0.09523, 0.115268, 0.112725, 0.096741, 0.102212, 0.094016, 0.113178, 0.159903, 0.187607]
y_MH0405_MH05_6 = [0, 0.010743, 0.001163, 0.0, 0.022953, 0.030422, 0.097346, 0.112933, 0.113924, 0.067693, 0.07389, 0.092645, 0.132099, 0.161543, 0.181976]
y_MH0405_MH05_7 = [0, 0.017475, 0.009753, 0.009019, 0.009969, 0.024604, 0.026804, 0.045205, 0.041988, 0.047744, 0.049903, 0.050754, 0.051583, 0.050844, 0.052388]#, 0.052452]
y_MH0405_MH05_8 = [0, 0.016686, 0.006281, 0.005703, 0.007875, 0.030758, 0.030564, 0.08332, 0.109397, 0.108177, 0.080375, 0.090188, 0.084255, 0.114266, 0.135035]#, 0.148745]
y_MH0405_MH05_9 = [0, 0.010641, 0.022915, 0.020868, 0.016814, 0.036881, 0.036084, 0.054539, 0.054322, 0.063992, 0.063179, 0.060962, 0.058405, 0.059545, 0.061974]# 0.064755]
y_MH0405_MH05_10 = [0, 0.013765, 0.003515, 0.002194, 0.009262, 0.02573, 0.027463, 0.05366, 0.056893, 0.075161, 0.077659, 0.073435, 0.071975, 0.07124, 0.073268]#, 0.075013]




y_baseline = [0, 0.010447, 0.030979, 0.029643, 0.038493, 0.051556, 0.050518, 0.049993, 0.05199, 0.082864, 0.091969, 0.090232, 0.085332, 0.083015, 0.079978]
y_baseline_lastFiveSec = [0,  0.010447, 0.036656, 0.009366, 0.04209, 0.013574, 0.049209, 0.063197, 0.063852, 0.175159, 0.078534, 0.060727, 0.064102, 0.062013, 0.050921]



y_noTC = [0, 0.027108, 0.032307, 0.025914, 0.025239, 0.026697, 0.027984, 0.034999, 0.054371, 0.052951, 0.052051, 0.04616, 0.050578, 0.048797, 0.046036]
y_noTC_lastFiveSec = [0, 0.027108, 0.010252, 0.007838, 0.007746, 0.039628, 0.033055, 0.07386, 0.049485, 0.045278, 0.037176, 0.085088, 0.025195, 0.042178, 0.038468]




y2 = [0.2, 0.3, 0.4, 0.3, 0.2, 0.2, 0.4, 0.3, 0.2, 0.3, 0.2, 0.3, 0.3, 0.2, 0.3, 0.2, 0.3, 0.4, 0.4, 0.3, 0.3, 0.3, 0.5, 0.4, 0.4, 0.3, 0.4, 0.4, 0.4, 0.2, 0.3, 0.4, 0.3, 0.2, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.2, 0.3, 0.2, 0.2, 0.3, 0.3, 0.3, 0.3, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]

for i in range(0, len(y2)):
    y2[i] = y2[i] * 40 / 100# 40 coores
x2 = []
for i in range(0, len(y2)):
    x2.append(i / len(y2) * 100)
print(y_half_bandwidth)
plt.figure("ATE")
#plt.title("CPU  vs. Time")
plt.xlabel('Time (s)') 
plt.ylabel('ATE (m)') 
plt.plot(x,y_half_bandwidth, ".-",label = "Half Baseline Bandwidth ATE")
plt.plot(x,y_half_bandwidth_lastFiveSec, "--",label = "last five second of Half Baseline Bandwidth ATE")
plt.legend()
plt.show()


plt.figure("ATE of MH05 alone")
#plt.title("CPU  vs. Time")
plt.xlabel('Time (s)') 
plt.ylabel('ATE (m)') 

plt.plot(x,y_MH05Alone, "x-",label = "MH05 Alone")

plt.plot(x,y_MH05Alone2, "x-",label = "MH05 Alone2")

plt.plot(x,y_MH05Alone3, "x-",label = "MH05 Alone3")

plt.plot(x,y_MH05Alone4, "x-",label = "MH05 Alone4")

plt.plot(x,y_MH05Alone5, "x-",label = "MH05 Alone5")

plt.plot(x,y_MH05Alone8, "x-",label = "MH05 Alone8")

plt.plot(x,y_MH05Alone9, "x-",label = "MH05 Alone9")


#plt.plot(x2,y2, "-",label = "SLAM-Share CPU Usage")

#plt.plot(x, ".--",label = "time (s)")
plt.legend()
plt.show()






plt.figure("ATE of MH05 by Merging")
#plt.title("CPU  vs. Time")
plt.xlabel('Time (s)') 
plt.ylabel('ATE (m)') 

y_MH0405_MH05_0
plt.plot(x,y_MH0405_MH05_2, "x-",label = "MH05 by merging 2 ")
plt.plot(x,y_MH0405_MH05_3, "x-",label = "MH05 by merging 3")
plt.plot(x,y_MH0405_MH05_4, "x-",label = "MH05 by merging 4")
plt.plot(x,y_MH0405_MH05_5, "x-",label = "MH05 by merging 5")
plt.plot(x,y_MH0405_MH05_6, "x-",label = "MH05 by merging 6")
plt.plot(x,y_MH0405_MH05_7, "x-",label = "MH05 by merging 7")
plt.plot(x,y_MH0405_MH05_8, "x-",label = "MH05 by merging 8")
plt.plot(x,y_MH0405_MH05_9, "x-",label = "MH05 by merging 9")
plt.plot(x,y_MH0405_MH05_10, "x-",label = "MH05 by merging 10")



#plt.plot(x2,y2, "-",label = "SLAM-Share CPU Usage")

#plt.plot(x, ".--",label = "time (s)")
plt.legend()
plt.show()



plt.figure("Baesline Bandwidth")
#plt.title("CPU  vs. Time")
plt.xlabel('Time (s)') 
plt.ylabel('ATE (m)') 


plt.plot(x,y_baseline, "x-",label = "MH05 Baseline Bandwidth")
plt.plot(x,y_baseline_lastFiveSec, "x-",label = "MH05 Baseline Bandwidth Last Five Second")




#plt.plot(x2,y2, "-",label = "SLAM-Share CPU Usage")

#plt.plot(x, ".--",label = "time (s)")
plt.legend()
plt.show()







plt.figure("Baesline no TC")
#plt.title("CPU  vs. Time")
plt.xlabel('Time (s)') 
plt.ylabel('ATE (m)') 
plt.plot(x,y_noTC, "x-",label = "MH05 Baseline no TC")
plt.plot(x,y_noTC_lastFiveSec, "x-",label = "MH05 Baseline no TC Last Five Second")
plt.legend()
plt.show()


plt.figure("ATE")
#plt.title("CPU  vs. Time")
plt.xlabel('Time (s)') 
plt.ylabel('ATE (m)') 
plt.plot(x,y_Delay, ".-",label = "delay")
plt.plot(x,y_Delay_LastFiveSec, "--",label = "last five second of delay")
plt.legend()
plt.show()